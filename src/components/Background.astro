<div class="background">
    <div class="grid">
        <div class="scene">
            <div class="pyramid">
                <div class="face face1"></div>
                <div class="face face2"></div>
                <div class="face face3"></div>
                <div class="face face4"></div>
                <div class="face face5"></div>
                <div class="face face6"></div>
                <div class="face face7"></div>
                <div class="face face8"></div>
            </div>
        </div>
        <div class="scene">
            <div class="pyramid">
                <div class="face face1"></div>
                <div class="face face2"></div>
                <div class="face face3"></div>
                <div class="face face4"></div>
                <div class="face face5"></div>
                <div class="face face6"></div>
                <div class="face face7"></div>
                <div class="face face8"></div>
            </div>
        </div>
        <div class="scene">
            <div class="pyramid">
                <div class="face face1"></div>
                <div class="face face2"></div>
                <div class="face face3"></div>
                <div class="face face4"></div>
                <div class="face face5"></div>
                <div class="face face6"></div>
                <div class="face face7"></div>
                <div class="face face8"></div>
            </div>
        </div>
        <div class="scene">
            <div class="pyramid">
                <div class="face face1"></div>
                <div class="face face2"></div>
                <div class="face face3"></div>
                <div class="face face4"></div>
                <div class="face face5"></div>
                <div class="face face6"></div>
                <div class="face face7"></div>
                <div class="face face8"></div>
            </div>
        </div>
    </div>
</div>
<style is:inline>
    :root {
        --size-of-piramide: 6.25rem;
        --size-of-face: calc(var(--size-of-piramide) / 2);
        --color1: #ff00ff;
        --color2: #00ffff;
        --color3: #00ff00;
        --color4: #ff9900;
        --color5: #ff3300;
        --color6: #6600ff;
    }

    .background {
        width: 100lvw;
        height: 100lvh;
        display: flex;
        position: fixed;
        z-index: -1;
        justify-content: center;
        align-items: center;
        font-family: none;
        background: radial-gradient(
            circle,
            rgb(24, 2, 34, 0.6) 34%,
            rgba(109, 40, 217, 0.6) 180%
        );
        overflow: hidden;

        ::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            right: -50%;
            bottom: -50%;
            width: 200%;
            height: 200%;
            background: transparent;
            background-image: repeating-conic-gradient(
                #fff 0%,
                transparent 0.00005%,
                transparent 0.0001%,
                transparent 0.00015%
            );
            opacity: 0.048;
            animation: noise 12s steps(12) infinite;
        }
    }

    @keyframes noise {
        0% {
            transform: translate(0, 0);
        }
        100% {
            transform: translate(-24%, -24%);
        }
    }

    .grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr 1fr;
        gap: 0;
        width: 100svw;
        max-width: 80rem;
        height: 100svh;
        margin: 0 auto;
    }

    .scene {
        width: 100%;
        height: 100%;
        perspective: 1500px;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        opacity: 0.4;
        &:nth-child(1) .pyramid {
            animation-delay: 0s;
            top: 22svh;
            left: 12svw;
        }
        &:nth-child(2) .pyramid {
            animation-delay: -1s;
            top: 35svh;
            right: 9svw;
        }
        &:nth-child(3) .pyramid {
            animation-delay: -2s;
            bottom: 6svh;
            left: 12svw;
        }
        &:nth-child(4) .pyramid {
            animation-delay: -3s;
            bottom: 8svh;
            right: 16svw;
        }
    }

    @keyframes rotatePyramid {
        0% {
            transform: rotateZ(0deg) rotateY(0deg);
        }
        100% {
            transform: rotateZ(360deg) rotateY(360deg);
        }
    }

    .pyramid {
        width: var(--size-of-piramide);
        height: var(--size-of-piramide);
        position: absolute;
        will-change: transform;
        transform-style: preserve-3d;
        animation: rotatePyramid 10s infinite linear;
    }

    @keyframes funkyEffects {
        0% {
            filter: brightness(1) contrast(1) grayscale(0);
        }
        25% {
            filter: brightness(1.2) contrast(0.5) grayscale(0.48);
        }
        50% {
            filter: brightness(0.8) contrast(2) grayscale(0.8);
        }
        75% {
            filter: brightness(1.2) contrast(1) grayscale(0.2);
        }
        100% {
            filter: brightness(1) contrast(1) grayscale(0);
        }
    }

    .face {
        position: absolute;
        width: var(--size-of-piramide);
        height: var(--size-of-piramide);
        clip-path: polygon(50% 0%, 100% 100%, 0% 100%);
        transform-origin: 50% 100%;
        transform: rotateX(45deg) rotateY(45deg) rotateZ(45deg);
        will-change: transform;
        animation: funkyEffects 5s infinite ease-in-out;
    }

    .pyramid,
    .face {
        transform: translateZ(0); /* Forzar a usar una capa de composici√≥n */
    }

    .face1 {
        background-color: #5a639c;
        transform: translateX(0) translateY(calc(-1 * var(--size-of-piramide)))
            translateZ(calc(-1 * var(--size-of-face))) rotateX(-120deg);
    }

    .face2 {
        background-color: #7776b3;
        transform: translateX(calc(-1 * var(--size-of-face)))
            translateY(calc(-1 * var(--size-of-face)))
            translateZ(calc(-1 * var(--size-of-face))) rotateZ(90deg)
            rotateX(-60deg);
    }

    .face3 {
        background-color: #9b86bd;
        transform: translateX(var(--size-of-face))
            translateY(calc(-1 * var(--size-of-face)))
            translateZ(calc(-1 * var(--size-of-face))) rotateZ(-90deg)
            rotateX(-60deg);
    }

    .face4 {
        background-color: #e2bbe9;
        transform: translateX(0) translateY(0)
            translateZ(calc(-1 * var(--size-of-face))) rotateX(60deg);
    }

    .face5 {
        background-color: #9b86bd;
        transform: translateX(0) translateY(0)
            translateZ(calc(-1 * var(--size-of-face))) rotateX(-60deg);
    }

    .face6 {
        background-color: #e2bbe9;
        transform: translateX(var(--size-of-face))
            translateY(calc(-1 * var(--size-of-face)))
            translateZ(calc(-1 * var(--size-of-face))) rotateZ(-90deg)
            rotateX(60deg);
    }

    .face7 {
        background-color: #5a639c;
        transform: translateX(calc(-1 * var(--size-of-face)))
            translateY(calc(-1 * var(--size-of-face)))
            translateZ(calc(-1 * var(--size-of-face))) rotateZ(90deg)
            rotateX(60deg);
    }

    .face8 {
        background-color: #7776b3;
        transform: translateX(0) translateY(calc(-1 * var(--size-of-piramide)))
            translateZ(calc(-1 * var(--size-of-face))) rotateX(120deg);
    }

    @media (max-width: 768px) {
        :root {
            --size-of-piramide: 4.8rem;
        }

        .grid {
            display: none;
        }
    }
</style>
